{
  "contracts": {
    "lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol": {
      "ReentrancyAttack": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "callSender",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol\":\"ReentrancyAttack\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.8/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol\":{\"keccak256\":\"0x06694958456703a9b581f69b8fe9901224d1761f2c773730b5852f15aabb92ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d3b1e5fdc512f0d3f4e606b374d072b1d1658172dfecbe47096560e0abf362b\",\"dweb:/ipfs/QmWDdTu6zMEnR7vdSP4FboPxt1jeDCmY3Peb3TjdnRaJ2D\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "solc_version": "0.8.23",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ReentrancyAttack.sol:ReentrancyAttack\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, r5\n\tptr.add\tr1, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_4[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r4, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r2\n\tptr.add\tr1, r2, r2\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_32\n\tadd\tr0, r0, r7\n.BB0_14:\n\tshl.s\t5, r7, r8\n\tptr.add\tr2, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_14\n.BB0_32:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_16\n\tshl.s\t5, r6, r6\n\tptr.add\tr2, r6, r2\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr2, r2\n\tsub\t256, r5, r5\n\tshr\tr2, r5, r2\n\tshl\tr2, r5, r2\n\tor\tr2, r7, r2\n\tst.1\tr6, r2\n.BB0_16:\n\tadd\t128, r4, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr5\n\tcontext.caller\tr2\n\tsub.s!\t4, r2, r6\n\tjump.ne\t@.BB0_17\n\tptr.add\tr1, r3, r1\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_19\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n.BB0_19:\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_21\n.BB0_20:\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_30\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.ge\t@.BB0_22\n\tadd\t31, r3, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tadd\t63, r4, r4\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tsub!\tr4, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_22\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_22\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr5, r3, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_31\n\tadd\tr0, r0, r6\n.BB0_27:\n\tshl.s\t5, r6, r7\n\tadd\tr5, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_27\n.BB0_31:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_20\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n\tjump\t@.BB0_20\n.BB0_22:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_30:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -3586272792504325861576784142326312153395859308298442090265057199577383305216\nCPI0_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell 2361183241434822606848\nCPI0_6:\n\t.cell 18446744073709551616\nCPI0_7:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_8:\n\t.cell 2852213850513516153367582212096\nCPI0_9:\n\t.cell 37268805191608899176760261474480865346391498708070210590975797293094228983808\nCPI0_10:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_11:\n\t.cell 7922816251426433759354395033600\n",
          "bytecode": {
            "object": "00010000000000020000008003000039000000400030043f000000000301001900000060033002700000002e0330019700000001022001900000004a0000c13d000000040230008c000000520000413d000000000201043b0000003002200197000000310220009c000000520000c13d0000000002000416000000240430008c000000520000413d000000000202004b000000520000c13d0000000402100370000000000202043b000000320420009c000000520000213d0000002304200039000000000434004b000000520000813d0000000405200039000000000451034f000000000404043b000000320640009c000000520000213d00000000024200190000002402200039000000000232004b000000520000213d0000002002500039000000000221034f0000001f0540018f0000000506400272000000310000613d00000000070000190000000508700210000000000982034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000000290000413d000000000705004b000000400000613d0000000506600210000000000262034f00000003055002100000008006600039000000000706043300000000075701cf000000000757022f000000000202043b0000010005500089000000000252022f00000000025201cf000000000272019f00000000002604350000008002400039000000000002043500000000050004140000000002000411000000040620008c000000540000c13d000000000131034f00000001020000390000000003000031000000630000013d0000000001000416000000000101004b000000520000c13d0000002001000039000001000010044300000120000004430000002f01000041000000b50001042e0000000001000019000000b6000104300000002e010000410000002e0350009c00000000050180190000002e0340009c00000000040180190000006001400210000000c003500210000000000113019f00000033011001c700b400af0000040f000000010220018f000000000301001900000060033002700000002e0030019d0000002e03300197000000000403004b000000790000c13d000000000102004b000000ad0000c13d000000400100043d00000044021000390000003703000041000000000032043500000024021000390000001d030000390000000000320435000000380200004100000000002104350000000402100039000000200300003900000000003204350000002e020000410000002e0310009c0000000001028019000000400110021000000039011001c7000000b600010430000000340430009c000000a70000813d0000001f04300039000000200500008a000000000454016f0000003f04400039000000000454016f000000400500043d0000000004450019000000000654004b00000000060000190000000106004039000000320740009c000000a70000213d0000000106600190000000a70000c13d000000400040043f0000001f0430018f00000000053504360000000503300272000000970000613d000000000600001900000005076002100000000008750019000000000771034f000000000707043b00000000007804350000000106600039000000000736004b0000008f0000413d000000000604004b000000650000613d0000000503300210000000000131034f00000000033500190000000304400210000000000503043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f0000000000130435000000650000013d000000350100004100000000001004350000004101000039000000040010043f0000003601000041000000b6000104300000000001000019000000b50001042e000000b2002104210000000102000039000000000001042d0000000002000019000000000001042d000000b400000432000000b50001042e000000b600010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000f8123dd500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000005265656e7472616e637941747461636b3a206661696c65642063616c6c00000008c379a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000000000000000000092380e2c580fdde94d474a1be82bd9470bec6933fe789f697dfd142e1485e2c6"
          },
          "methodIdentifiers": {
            "callSender(bytes)": "f8123dd5"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\nobject \"ReentrancyAttack_25\" {\n    code {\n        {\n            /// @src 0:106:317  \"contract ReentrancyAttack is Context {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ReentrancyAttack_25_deployed\")\n            codecopy(_1, dataoffset(\"ReentrancyAttack_25_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n    object \"ReentrancyAttack_25_deployed\" {\n        code {\n            {\n                /// @src 0:106:317  \"contract ReentrancyAttack is Context {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    if eq(0xf8123dd5, shr(224, calldataload(0)))\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset := calldataload(_2)\n                        let _3 := 0xffffffffffffffff\n                        if gt(offset, _3) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(_2, offset))\n                        if gt(length, _3) { revert(0, 0) }\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(_1, add(offset, 36), length)\n                        let _4 := add(_1, length)\n                        mstore(_4, 0)\n                        /// @src 0:226:249  \"_msgSender().call(data)\"\n                        let expr_component := call(gas(), /** @src 1:735:745  \"msg.sender\" */ caller(), /** @src 0:106:317  \"contract ReentrancyAttack is Context {...\" */ 0, /** @src 0:226:249  \"_msgSender().call(data)\" */ _1, sub(/** @src 0:106:317  \"contract ReentrancyAttack is Context {...\" */ _4, /** @src 0:226:249  \"_msgSender().call(data)\" */ _1), /** @src 0:106:317  \"contract ReentrancyAttack is Context {...\" */ 0, 0)\n                        switch returndatasize()\n                        case 0 { }\n                        default {\n                            let _5 := returndatasize()\n                            if gt(_5, _3)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(0, 36)\n                            }\n                            let _6 := not(31)\n                            let memPtr := mload(64)\n                            let newFreePtr := add(memPtr, and(add(and(add(_5, 0x1f), _6), 63), _6))\n                            if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(0, 36)\n                            }\n                            mstore(64, newFreePtr)\n                            mstore(memPtr, _5)\n                            returndatacopy(add(memPtr, 32), 0, returndatasize())\n                        }\n                        if iszero(expr_component)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), 32)\n                            mstore(add(memPtr_1, 36), 29)\n                            mstore(add(memPtr_1, 68), \"ReentrancyAttack: failed call\")\n                            revert(memPtr_1, 100)\n                        }\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cd09e22c701a298db9f42001a4819adc450b28cdcc2543f69eb541c8d558229f64736f6c63430008170033\"\n    }\n}\n",
        "hash": "0100003b484d9a80dde9cc4efc8b2735d061248779dae167fc40c7d8d993063e",
        "factoryDependencies": {}
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.8/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol",
        "exportedSymbols": {
          "Context": [
            55
          ],
          "ReentrancyAttack": [
            25
          ]
        },
        "id": 26,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "33:24:0"
          },
          {
            "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 3,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 26,
            "sourceUnit": 56,
            "src": "59:45:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 2,
                  "name": "Context",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55,
                  "src": "67:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 4,
                  "name": "Context",
                  "nameLocations": [
                    "135:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "135:7:0"
                },
                "id": 5,
                "nodeType": "InheritanceSpecifier",
                "src": "135:7:0"
              }
            ],
            "canonicalName": "ReentrancyAttack",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 25,
            "linearizedBaseContracts": [
              25,
              55
            ],
            "name": "ReentrancyAttack",
            "nameLocation": "115:16:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 23,
                  "nodeType": "Block",
                  "src": "197:118:0",
                  "statements": [
                    {
                      "assignments": [
                        11,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 11,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "213:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 23,
                          "src": "208:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 10,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "208:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 17,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 15,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "244:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "226:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "226:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "239:4:0",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "src": "226:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "226:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "207:42:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 19,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "267:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5265656e7472616e637941747461636b3a206661696c65642063616c6c",
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "276:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_cef7d31d1ab774e44434693d4d02c9435c97f3cf18a71b3acddb2d4efa78b651",
                              "typeString": "literal_string \"ReentrancyAttack: failed call\""
                            },
                            "value": "ReentrancyAttack: failed call"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_cef7d31d1ab774e44434693d4d02c9435c97f3cf18a71b3acddb2d4efa78b651",
                              "typeString": "literal_string \"ReentrancyAttack: failed call\""
                            }
                          ],
                          "id": 18,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "259:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "259:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 22,
                      "nodeType": "ExpressionStatement",
                      "src": "259:49:0"
                    }
                  ]
                },
                "functionSelector": "f8123dd5",
                "id": 24,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "callSender",
                "nameLocation": "158:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 8,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 7,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "184:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 24,
                      "src": "169:19:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "169:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "168:21:0"
                },
                "returnParameters": {
                  "id": 9,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "197:0:0"
                },
                "scope": 25,
                "src": "149:166:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 26,
            "src": "106:211:0",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "33:285:0"
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            55
          ]
        },
        "id": 56,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 27,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:24:1"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "127:496:1",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 55,
            "linearizedBaseContracts": [
              55
            ],
            "name": "Context",
            "nameLocation": "642:7:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 36,
                  "nodeType": "Block",
                  "src": "718:34:1",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "735:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "739:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "735:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 32,
                      "id": 35,
                      "nodeType": "Return",
                      "src": "728:17:1"
                    }
                  ]
                },
                "id": 37,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "665:10:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 29,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "675:2:1"
                },
                "returnParameters": {
                  "id": 32,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 37,
                      "src": "709:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "709:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "708:9:1"
                },
                "scope": 55,
                "src": "656:96:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 45,
                  "nodeType": "Block",
                  "src": "825:32:1",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 42,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "842:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "846:4:1",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "842:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 41,
                      "id": 44,
                      "nodeType": "Return",
                      "src": "835:15:1"
                    }
                  ]
                },
                "id": 46,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "767:8:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 38,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "775:2:1"
                },
                "returnParameters": {
                  "id": 41,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "809:14:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "809:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "808:16:1"
                },
                "scope": 55,
                "src": "758:99:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 53,
                  "nodeType": "Block",
                  "src": "935:25:1",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 50,
                      "id": 52,
                      "nodeType": "Return",
                      "src": "945:8:1"
                    }
                  ]
                },
                "id": 54,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "872:20:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 47,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "892:2:1"
                },
                "returnParameters": {
                  "id": 50,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "926:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "925:9:1"
                },
                "scope": 55,
                "src": "863:97:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 56,
            "src": "624:338:1",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "101:862:1"
      }
    }
  },
  "errors": [],
  "version": "0.8.23",
  "long_version": "0.8.23+commit.f704f362.Linux.g++",
  "zk_version": "1.4.1"
}