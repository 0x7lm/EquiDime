{
  "contracts": {
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol": {
      "ConfirmedOwnerWithProposal": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "pendingOwner",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.8/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187\",\"dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693\",\"dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE\"]}},\"version\":1}",
          "solc_version": "0.8.23",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_28\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr6\n\tsub!\tr6, r3, r3\n\tjump.ne\t@.BB0_24\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tor\tr4, r6, r4\n\tsstore\tr0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tand\t@CPI0_2[0], r3, r5\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n.BB0_38:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_39\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_39:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_2[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t160, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_13\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_12\n.BB0_30:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr5\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB0_34\n\tsub!\tr6, r5, r1\n\tjump.ne\t@.BB0_37\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tor\tr1, r5, r1\n\tsstore\tr0, r1\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_15\n\tcontext.caller\tr1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB0_17\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n.BB0_12:\n\tst.1\tr2, r3\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_15:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_37:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tjump\t@.BB0_38\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_5:\n\t.cell -8352700767705030668357216594227241474277607171479992828920686105414662745480\nCPI0_6:\n\t.cell 30477107189792067809907278063365548287250439923367031265618412078853158600704\nCPI0_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_8:\n\t.cell 7922816251426433759354395033600\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 30477107189792067803313207904920092556244933919346619109201225024049046880256\nCPI0_11:\n\t.cell 4076725131\nCPI0_12:\n\t.cell 2376452955\nCPI0_13:\n\t.cell 2042253463\nCPI0_14:\n\t.cell 35927816869373543188625519729548758844492007594142020231330326663764612481024\nCPI0_15:\n\t.cell 7922816253787617000789217640448\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 35035607279084747875032095267602354476277983814074373230998149299897699926016\nCPI0_18:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\n",
          "bytecode": {
            "object": "00000000030100190000006003300270000000390330019700000001022001900000002f0000c13d0000008002000039000000400020043f000000040230008c000000ca0000413d000000000201043b000000e002200270000000440420009c000000620000613d000000450120009c0000007d0000613d000000460120009c000000ca0000c13d0000000001000416000000000101004b000000ca0000c13d0000000101000039000000000201041a0000003b032001970000000006000411000000000336004b000000a00000c13d000000000300041a0000003c04300197000000000464019f000000000040041b0000003c02200197000000000021041b00000039010000410000000002000414000000390420009c0000000002018019000000c0012002100000003b053001970000003d011001c70000800d0200003900000003030000390000004b0400004100e000db0000040f0000000101200190000000ca0000613d0000000001000019000000e10001042e0000000002000416000000000202004b000000ca0000c13d0000001f023000390000003a022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000420000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000003a0000413d000000000502004b000000510000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000400130008c000000ca0000413d000000800500043d0000003b0150009c000000ca0000213d000000a00600043d0000003b0160009c000000ca0000213d000000000105004b000000850000c13d000000400100043d00000044021000390000004303000041000000000032043500000024021000390000001803000039000000940000013d0000000002000416000000240330008c000000ca0000413d000000000202004b000000ca0000c13d0000000401100370000000000101043b0000003b061001970000003b0110009c000000ca0000213d000000000100041a0000003b011001970000000005000411000000000115004b000000aa0000c13d000000000156004b000000cc0000c13d0000004001000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f0000003f01000041000000c40010043f0000004801000041000000e2000104300000000001000416000000000101004b000000ca0000c13d000000000100041a0000003b01100197000000800010043f0000004901000041000000e10001042e000000000100041a0000003c01100197000000000151019f000000000010041b000000000106004b000000c50000613d0000000001000411000000000116004b000000b40000c13d000000400100043d00000044021000390000003f030000410000000000320435000000240210003900000017030000390000000000320435000000400200004100000000002104350000000402100039000000200300003900000000003204350000003902000041000000390310009c0000000001028019000000400110021000000041011001c7000000e2000104300000004001000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004a01000041000000c40010043f0000004801000041000000e2000104300000004001000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004701000041000000c40010043f0000004801000041000000e2000104300000000101000039000000000201041a0000003c02200197000000000262019f000000000021041b00000039010000410000000002000414000000390320009c0000000002018019000000c0012002100000003d011001c70000800d0200003900000003030000390000003e0400004100e000db0000040f0000000101200190000000ca0000613d0000002001000039000001000010044300000120000004430000004201000041000000e10001042e0000000001000019000000e2000104300000000101000039000000000201041a0000003c02200197000000000262019f000000000021041b00000039010000410000000002000414000000390320009c0000000002018019000000c0012002100000003d011001c70000800d0200003900000003030000390000003e040000410000002a0000013d000000de002104210000000102000039000000000001042d0000000002000019000000000001042d000000e000000432000000e10001042e000000e200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127843616e6e6f74207472616e7366657220746f2073656c6600000000000000000008c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000020000000000000000000000000000004000000100000000000000000043616e6e6f7420736574206f776e657220746f207a65726f000000000000000000000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000079ba50974f6e6c792063616c6c61626c65206279206f776e657200000000000000000000000000000000000000000000000000000000006400000080000000000000000000000000000000000000000000000000000000200000008000000000000000004d7573742062652070726f706f736564206f776e6572000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0dd0313ad0da5cba79917e213f5897ff1abfe4517eff25679452f12179350fd5f"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\", 1:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol\"\nobject \"ConfirmedOwnerWithProposal_161\" {\n    code {\n        {\n            /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ConfirmedOwnerWithProposal_161\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(/** @src 0:552:574  \"newOwner != address(0)\" */ value0, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _2)\n            if /** @src 0:552:574  \"newOwner != address(0)\" */ iszero(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _3)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 24)\n                mstore(add(memPtr, 68), \"Cannot set owner to zero\")\n                revert(memPtr, 100)\n            }\n            let _4 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _4), _3))\n            let _5 := and(/** @src 0:638:664  \"pendingOwner != address(0)\" */ value1, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _2)\n            /// @src 0:634:713  \"if (pendingOwner != address(0)) {...\"\n            if /** @src 0:638:664  \"pendingOwner != address(0)\" */ iszero(iszero(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _5))\n            /// @src 0:634:713  \"if (pendingOwner != address(0)) {...\"\n            {\n                /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                if /** @src 0:1559:1575  \"to != msg.sender\" */ eq(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _5, /** @src 0:1565:1575  \"msg.sender\" */ caller())\n                /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 23)\n                    mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                    revert(memPtr_1, 100)\n                }\n                sstore(/** @src 0:1610:1629  \"s_pendingOwner = to\" */ 0x01, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ or(and(sload(/** @src 0:1610:1629  \"s_pendingOwner = to\" */ 0x01), /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _4), _5))\n                /// @src 0:1641:1680  \"OwnershipTransferRequested(s_owner, to)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:1641:1680  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _3, /** @src 0:1641:1680  \"OwnershipTransferRequested(s_owner, to)\" */ _5)\n            }\n            /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n            let _6 := mload(64)\n            let _7 := datasize(\"ConfirmedOwnerWithProposal_161_deployed\")\n            codecopy(_6, dataoffset(\"ConfirmedOwnerWithProposal_161_deployed\"), _7)\n            return(_6, _7)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 0:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\"\n    object \"ConfirmedOwnerWithProposal_161_deployed\" {\n        code {\n            {\n                /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x79ba5097 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(/** @src 0:1089:1103  \"s_pendingOwner\" */ 0x01)\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        let _3 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 0:1075:1103  \"msg.sender == s_pendingOwner\" */ eq(/** @src 0:1075:1085  \"msg.sender\" */ caller(), /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ and(_2, _3)))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 22)\n                            mstore(add(_1, 68), \"Must be proposed owner\")\n                            revert(_1, 100)\n                        }\n                        let _4 := sload(0)\n                        let _5 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(0, or(and(_4, _5), /** @src 0:1075:1085  \"msg.sender\" */ caller()))\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        sstore(/** @src 0:1089:1103  \"s_pendingOwner\" */ 0x01, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ and(_2, _5))\n                        /// @src 0:1234:1276  \"OwnershipTransferred(oldOwner, msg.sender)\"\n                        log3(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ 0, 0, /** @src 0:1234:1276  \"OwnershipTransferred(oldOwner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ and(_4, _3), /** @src 0:1075:1085  \"msg.sender\" */ caller())\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        return(memPos, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _6 := sub(shl(160, 1), 1)\n                        let _7 := and(value, _6)\n                        if iszero(eq(value, _7)) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), _6)\n                        if iszero(/** @src 0:1788:1809  \"msg.sender == s_owner\" */ eq(/** @src 0:1788:1798  \"msg.sender\" */ caller(), /** @src 0:1788:1809  \"msg.sender == s_owner\" */ cleaned_1))\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"Only callable by owner\")\n                            revert(memPtr, 100)\n                        }\n                        if /** @src 0:1559:1575  \"to != msg.sender\" */ eq(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ _7, /** @src 0:1788:1798  \"msg.sender\" */ caller())\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 23)\n                            mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 0:1610:1629  \"s_pendingOwner = to\" */ 0x01, /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ or(and(sload(/** @src 0:1610:1629  \"s_pendingOwner = to\" */ 0x01), /** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ shl(160, 0xffffffffffffffffffffffff)), _7))\n                        /// @src 0:1641:1680  \"OwnershipTransferRequested(s_owner, to)\"\n                        log3(/** @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\" */ 0, 0, /** @src 0:1641:1680  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, cleaned_1, _7)\n                        /// @src 0:213:1990  \"contract ConfirmedOwnerWithProposal is OwnableInterface {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f6046dd2c36233bdc21a06599614fbcf321a15e428052262f30c65bc6cbf572f64736f6c63430008170033\"\n    }\n}\n",
        "hash": "0100004d6fa0a0b1a02ce03e343584f226633ec5562d3fd6316441fd67955c14",
        "factoryDependencies": {}
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol": {
      "OwnableInterface": {
        "abi": [
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol\":\"OwnableInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.8/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693\",\"dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol",
        "exportedSymbols": {
          "ConfirmedOwnerWithProposal": [
            161
          ],
          "OwnableInterface": [
            177
          ]
        },
        "id": 162,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:0"
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol",
            "file": "./interfaces/OwnableInterface.sol",
            "id": 2,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 162,
            "sourceUnit": 178,
            "src": "57:43:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 4,
                  "name": "OwnableInterface",
                  "nameLocations": [
                    "252:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "252:16:0"
                },
                "id": 5,
                "nodeType": "InheritanceSpecifier",
                "src": "252:16:0"
              }
            ],
            "canonicalName": "ConfirmedOwnerWithProposal",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "102:110:0",
              "text": " @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
            },
            "fullyImplemented": true,
            "id": 161,
            "linearizedBaseContracts": [
              161,
              177
            ],
            "name": "ConfirmedOwnerWithProposal",
            "nameLocation": "222:26:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "s_owner",
                "nameLocation": "289:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "273:23:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "273:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "s_pendingOwner",
                "nameLocation": "316:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "300:30:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "300:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
                "id": 15,
                "name": "OwnershipTransferRequested",
                "nameLocation": "341:26:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 14,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 11,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "384:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 15,
                      "src": "368:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "368:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "406:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 15,
                      "src": "390:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "390:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "367:42:0"
                },
                "src": "335:75:0"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 21,
                "name": "OwnershipTransferred",
                "nameLocation": "419:20:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 20,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 17,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "456:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "440:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "440:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "478:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "462:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "462:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "439:42:0"
                },
                "src": "413:69:0"
              },
              {
                "body": {
                  "id": 54,
                  "nodeType": "Block",
                  "src": "538:179:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 29,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "552:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 32,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "572:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 31,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "564:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "564:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "564:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "552:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "576:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                              "typeString": "literal_string \"Cannot set owner to zero\""
                            },
                            "value": "Cannot set owner to zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                              "typeString": "literal_string \"Cannot set owner to zero\""
                            }
                          ],
                          "id": 28,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "544:59:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 37,
                      "nodeType": "ExpressionStatement",
                      "src": "544:59:0"
                    },
                    {
                      "expression": {
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 38,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "610:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 39,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "620:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "610:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 41,
                      "nodeType": "ExpressionStatement",
                      "src": "610:18:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42,
                          "name": "pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "638:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "662:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "654:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "654:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "654:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "638:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 53,
                      "nodeType": "IfStatement",
                      "src": "634:79:0",
                      "trueBody": {
                        "id": 52,
                        "nodeType": "Block",
                        "src": "666:47:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 49,
                                  "name": "pendingOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "693:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48,
                                "name": "_transferOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "674:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "674:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 51,
                            "nodeType": "ExpressionStatement",
                            "src": "674:32:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 55,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 26,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "506:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 55,
                      "src": "498:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "498:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25,
                      "mutability": "mutable",
                      "name": "pendingOwner",
                      "nameLocation": "524:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 55,
                      "src": "516:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "516:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "497:40:0"
                },
                "returnParameters": {
                  "id": 27,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "538:0:0"
                },
                "scope": 161,
                "src": "486:231:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  173
                ],
                "body": {
                  "id": 68,
                  "nodeType": "Block",
                  "src": "891:33:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 65,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "916:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "897:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 67,
                      "nodeType": "ExpressionStatement",
                      "src": "897:22:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 56,
                  "nodeType": "StructuredDocumentation",
                  "src": "721:102:0",
                  "text": " @notice Allows an owner to begin transferring ownership to a new address,\n pending."
                },
                "functionSelector": "f2fde38b",
                "id": 69,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 62,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 61,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "881:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 160,
                      "src": "881:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "881:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "835:17:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 60,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "872:8:0"
                },
                "parameters": {
                  "id": 59,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "861:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "853:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "853:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "852:12:0"
                },
                "returnParameters": {
                  "id": 63,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "891:0:0"
                },
                "scope": 161,
                "src": "826:98:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  176
                ],
                "body": {
                  "id": 104,
                  "nodeType": "Block",
                  "src": "1061:220:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 75,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1075:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1079:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1075:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 77,
                              "name": "s_pendingOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1089:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1075:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d7573742062652070726f706f736564206f776e6572",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1105:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                              "typeString": "literal_string \"Must be proposed owner\""
                            },
                            "value": "Must be proposed owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                              "typeString": "literal_string \"Must be proposed owner\""
                            }
                          ],
                          "id": 74,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1067:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1067:63:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 81,
                      "nodeType": "ExpressionStatement",
                      "src": "1067:63:0"
                    },
                    {
                      "assignments": [
                        83
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 83,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "1145:8:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 104,
                          "src": "1137:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 82,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1137:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 85,
                      "initialValue": {
                        "id": 84,
                        "name": "s_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1156:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1137:26:0"
                    },
                    {
                      "expression": {
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 86,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1169:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1179:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1183:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1179:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1169:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 90,
                      "nodeType": "ExpressionStatement",
                      "src": "1169:20:0"
                    },
                    {
                      "expression": {
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 91,
                          "name": "s_pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1195:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1220:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1212:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 92,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1212:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1212:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1195:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 97,
                      "nodeType": "ExpressionStatement",
                      "src": "1195:27:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 99,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1255:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 100,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1265:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1269:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1234:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1234:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 103,
                      "nodeType": "EmitStatement",
                      "src": "1229:47:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 70,
                  "nodeType": "StructuredDocumentation",
                  "src": "928:85:0",
                  "text": " @notice Allows an ownership transfer to be completed by the recipient."
                },
                "functionSelector": "79ba5097",
                "id": 105,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "acceptOwnership",
                "nameLocation": "1025:15:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 72,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1052:8:0"
                },
                "parameters": {
                  "id": 71,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1040:2:0"
                },
                "returnParameters": {
                  "id": 73,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1061:0:0"
                },
                "scope": 161,
                "src": "1016:265:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  168
                ],
                "body": {
                  "id": 114,
                  "nodeType": "Block",
                  "src": "1388:25:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 112,
                        "name": "s_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1401:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 111,
                      "id": 113,
                      "nodeType": "Return",
                      "src": "1394:14:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 106,
                  "nodeType": "StructuredDocumentation",
                  "src": "1285:44:0",
                  "text": " @notice Get the current owner"
                },
                "functionSelector": "8da5cb5b",
                "id": 115,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1341:5:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 108,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1361:8:0"
                },
                "parameters": {
                  "id": 107,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1346:2:0"
                },
                "returnParameters": {
                  "id": 111,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "1379:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1379:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1378:9:0"
                },
                "scope": 161,
                "src": "1332:81:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 138,
                  "nodeType": "Block",
                  "src": "1545:140:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 122,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "1559:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1565:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1569:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1565:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1559:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1577:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                              "typeString": "literal_string \"Cannot transfer to self\""
                            },
                            "value": "Cannot transfer to self"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                              "typeString": "literal_string \"Cannot transfer to self\""
                            }
                          ],
                          "id": 121,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1551:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 128,
                      "nodeType": "ExpressionStatement",
                      "src": "1551:52:0"
                    },
                    {
                      "expression": {
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 129,
                          "name": "s_pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1610:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 130,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1627:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1610:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 132,
                      "nodeType": "ExpressionStatement",
                      "src": "1610:19:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 134,
                            "name": "s_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1668:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 135,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "1677:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 133,
                          "name": "OwnershipTransferRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1641:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1641:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 137,
                      "nodeType": "EmitStatement",
                      "src": "1636:44:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 116,
                  "nodeType": "StructuredDocumentation",
                  "src": "1417:77:0",
                  "text": " @notice validate, transfer ownership, and emit relevant events"
                },
                "id": 139,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "1506:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 119,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1533:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1525:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1525:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1524:12:0"
                },
                "returnParameters": {
                  "id": 120,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1545:0:0"
                },
                "scope": 161,
                "src": "1497:188:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 151,
                  "nodeType": "Block",
                  "src": "1774:67:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1788:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1792:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1788:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 146,
                              "name": "s_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1802:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1788:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1811:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                              "typeString": "literal_string \"Only callable by owner\""
                            },
                            "value": "Only callable by owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                              "typeString": "literal_string \"Only callable by owner\""
                            }
                          ],
                          "id": 143,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1780:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1780:56:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 150,
                      "nodeType": "ExpressionStatement",
                      "src": "1780:56:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 140,
                  "nodeType": "StructuredDocumentation",
                  "src": "1689:38:0",
                  "text": " @notice validate access"
                },
                "id": 152,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_validateOwnership",
                "nameLocation": "1739:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 141,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1757:2:0"
                },
                "returnParameters": {
                  "id": 142,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1774:0:0"
                },
                "scope": 161,
                "src": "1730:111:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 159,
                  "nodeType": "Block",
                  "src": "1950:38:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 155,
                          "name": "_validateOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "1956:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1956:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 157,
                      "nodeType": "ExpressionStatement",
                      "src": "1956:20:0"
                    },
                    {
                      "id": 158,
                      "nodeType": "PlaceholderStatement",
                      "src": "1982:1:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 153,
                  "nodeType": "StructuredDocumentation",
                  "src": "1845:81:0",
                  "text": " @notice Reverts if called by anyone other than the contract owner."
                },
                "id": 160,
                "name": "onlyOwner",
                "nameLocation": "1938:9:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 154,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1947:2:0"
                },
                "src": "1929:59:0",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 162,
            "src": "213:1777:0",
            "usedErrors": [],
            "usedEvents": [
              15,
              21
            ]
          }
        ],
        "src": "32:1959:0"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/OwnableInterface.sol",
        "exportedSymbols": {
          "OwnableInterface": [
            177
          ]
        },
        "id": 178,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 163,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:1"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "OwnableInterface",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 177,
            "linearizedBaseContracts": [
              177
            ],
            "name": "OwnableInterface",
            "nameLocation": "67:16:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "8da5cb5b",
                "id": 168,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "97:5:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 164,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "102:2:1"
                },
                "returnParameters": {
                  "id": 167,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "123:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "123:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "122:9:1"
                },
                "scope": 177,
                "src": "88:44:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "f2fde38b",
                "id": 173,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferOwnership",
                "nameLocation": "145:17:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 171,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "171:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "163:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "163:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "162:19:1"
                },
                "returnParameters": {
                  "id": 172,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "190:0:1"
                },
                "scope": 177,
                "src": "136:55:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "79ba5097",
                "id": 176,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "acceptOwnership",
                "nameLocation": "204:15:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 174,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "219:2:1"
                },
                "returnParameters": {
                  "id": 175,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "230:0:1"
                },
                "scope": 177,
                "src": "195:36:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 178,
            "src": "57:176:1",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "32:202:1"
      }
    }
  },
  "errors": [],
  "version": "0.8.23",
  "long_version": "0.8.23+commit.f704f362.Linux.g++",
  "zk_version": "1.4.1"
}